Setting up perl (5.28.1-6) ...
Setting up autoconf (2.69-11) ...
Setting up g++-8 (8.3.0-6) ...
Setting up automake-1.15 (1:1.15.1-5) ...
update-alternatives: using /usr/bin/automake-1.15 to provide /usr/bin/automake (automake) in auto mode
Setting up g++ (4:8.3.0-1) ...
update-alternatives: using /usr/bin/g++ to provide /usr/bin/c++ (c++) in auto mode
Processing triggers for libc-bin (2.28-10) ...
Processing triggers for ca-certificates (20200601~deb10u1) ...
Updating certificates in /etc/ssl/certs...
0 added, 0 removed; done.
Running hooks in /etc/ca-certificates/update.d...
done.
Removing intermediate container 1ce30385d0dd
 ---> bc0ad8faaa28
Step 5/6 : COPY install_toolchain_turbofish.sh libc patch-binutils patch-coreutils patch-gcc .
When using COPY with more than one source file, the destination must be a directory and end with a /
docker: Error response from daemon: invalid mount config for type "bind": bind source path does not exist: /toolchain_turbofish.
See 'docker run --help'.
mordak@debian:~/Documents/KFS/toolchain_turbofish$ ls /
bin                                                    dev         initrd.img.old  libx32      opt   sbin  _toolchain_turbofish  vmlinuz.old
boot                                                   etc         lib             lost+found  proc  srv   usr                   wine-obs.list
cybermax-dexter-ubuntu-sdl2-backport-groovy.list       home        lib32           media       root  sys   var                   wine-obs.list.save
cybermax-dexter-ubuntu-sdl2-backport-groovy.list.save  initrd.img  lib64           mnt         run   tmp   vmlinuz
mordak@debian:~/Documents/KFS/toolchain_turbofish$ ./run.sh 
Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post http://%2Fvar%2Frun%2Fdocker.sock/v1.40/build?buildargs=%7B%7D&cachefrom=%5B%5D&cgroupparent=&cpuperiod=0&cpuquota=0&cpusetcpus=&cpusetmems=&cpushares=0&dockerfile=Dockerfile&labels=%7B%7D&memory=0&memswap=0&networkmode=default&rm=1&session=1nubu2klb3gskhv4lvfr1zjud&shmsize=0&t=turbofish%3A0.1&target=&ulimits=null&version=1: dial unix /var/run/docker.sock: connect: permission denied
docker: Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Post http://%2Fvar%2Frun%2Fdocker.sock/v1.40/containers/create: dial unix /var/run/docker.sock: connect: permission denied.
See 'docker run --help'.
mordak@debian:~/Documents/KFS/toolchain_turbofish$ sudo ./run.sh 
Sending build context to Docker daemon  7.506MB
Step 1/6 : FROM debian:buster
 ---> 1b686a95ddbf
Step 2/6 : WORKDIR /build_toolchain
 ---> Using cache
 ---> f977f9042cb5
Step 3/6 : RUN apt update
 ---> Using cache
 ---> 775db32f6141
Step 4/6 : RUN yes | apt install binutils make gcc g++ nasm automake-1.15 libmpc-dev libmpfr-dev libgmp-dev wget patch tar xz-utils
 ---> Using cache
 ---> bc0ad8faaa28
Step 5/6 : COPY install_toolchain_turbofish.sh libc patch-binutils patch-coreutils patch-gcc .
When using COPY with more than one source file, the destination must be a directory and end with a /
docker: Error response from daemon: invalid mount config for type "bind": bind source path does not exist: /toolchain_turbofish.
See 'docker run --help'.
mordak@debian:~/Documents/KFS/toolchain_turbofish$ sudo mkdir /toolchain_turbofish.
mordak@debian:~/Documents/KFS/toolchain_turbofish$ sudo ./run.sh 
Sending build context to Docker daemon  7.506MB
Step 1/6 : FROM debian:buster
 ---> 1b686a95ddbf
Step 2/6 : WORKDIR /build_toolchain
 ---> Using cache
 ---> f977f9042cb5
Step 3/6 : RUN apt update
 ---> Using cache
 ---> 775db32f6141
Step 4/6 : RUN yes | apt install binutils make gcc g++ nasm automake-1.15 libmpc-dev libmpfr-dev libgmp-dev wget patch tar xz-utils
 ---> Using cache
 ---> bc0ad8faaa28
Step 5/6 : COPY install_toolchain_turbofish.sh libc patch-binutils patch-coreutils patch-gcc .
When using COPY with more than one source file, the destination must be a directory and end with a /
docker: Error response from daemon: invalid mount config for type "bind": bind source path does not exist: /toolchain_turbofish.
See 'docker run --help'.
mordak@debian:~/Documents/KFS/toolchain_turbofish$ sudo mkdir /toolchain_turbofish
mordak@debian:~/Documents/KFS/toolchain_turbofish$ sudo ./run.sh 
Sending build context to Docker daemon  7.506MB
Step 1/6 : FROM debian:buster
 ---> 1b686a95ddbf
Step 2/6 : WORKDIR /build_toolchain
 ---> Using cache
 ---> f977f9042cb5
Step 3/6 : RUN apt update
 ---> Using cache
 ---> 775db32f6141
Step 4/6 : RUN yes | apt install binutils make gcc g++ nasm automake-1.15 libmpc-dev libmpfr-dev libgmp-dev wget patch tar xz-utils
 ---> Using cache
 ---> bc0ad8faaa28
Step 5/6 : COPY install_toolchain_turbofish.sh libc patch-binutils patch-coreutils patch-gcc .
When using COPY with more than one source file, the destination must be a directory and end with a /
Unable to find image 'turbofish:0.1' locally
docker: Error response from daemon: pull access denied for turbofish, repository does not exist or may require 'docker login': denied: requested access to the resource is denied.
See 'docker run --help'.

